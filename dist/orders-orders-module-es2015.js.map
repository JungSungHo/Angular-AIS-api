{"version":3,"sources":["/./src/app/orders/orders.component.html","/./src/app/orders/orders-routing.module.ts","/./src/app/orders/orders.component.ts","/./src/app/orders/orders.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iNAAiN,MAAM,gOAAgO,gEAAgE,mCAAmC,GAAG,kCAAkC,mPAAmP,qEAAqE,mBAAmB,gEAAgE,4CAA4C,6IAA6I,gEAAgE,iDAAiD,kpB;;;;;;;;;;;;;;;;;;;ACA3sC;AACc;AAEF;AAErD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe,EAAE;CACzC,CAAC;AAMF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAE/B;AADQ,8BAAU,GAAG,CAAE,iEAAe,CAAE,CAAC;AAD7B,mBAAmB;IAJ/B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;QAC1C,OAAO,EAAE,CAAE,4DAAY,CAAE;KAC1B,CAAC;GACW,mBAAmB,CAE/B;AAF+B;;;;;;;;;;;;;;;;;;;;ACbkB;AAEU;AAEM;AAMlE,IAAa,eAAe,GAA5B,MAAa,eAAe;IAMxB,YAAoB,WAAwB,EAAU,cAA8B;QAAhE,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAHpF,iBAAY,GAAG,CAAC,CAAC;QACjB,aAAQ,GAAG,CAAC,CAAC;IAE2E,CAAC;IAEzF,QAAQ;QACJ,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,IAAY;QACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,gBAAgB,CAAC,IAAY;QACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;aACvE,SAAS,CAAC,CAAC,QAAoC,EAAE,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;QACtC,CAAC,CAAC,CAAC;IACX,CAAC;CAEJ;;YAlBoC,uEAAW;YAA0B,6EAAc;;AAN3E,eAAe;IAJ3B,+DAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,oJAAsC;KACzC,CAAC;2EAOmC,uEAAW,EAA0B,6EAAc;GAN3E,eAAe,CAwB3B;AAxB2B;;;;;;;;;;;;;;;;;;;;ACVa;AAEc;AACO;AAM9D,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAI;AAAhB,YAAY;IAJxB,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAY,EAAE,0EAAmB,CAAC;QAC5C,YAAY,EAAE,CAAC,0EAAmB,CAAC,UAAU,CAAC;KAC/C,CAAC;GACW,YAAY,CAAI;AAAJ","file":"orders-orders-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"customers view indent\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <header>\\r\\n            <h3>\\r\\n                <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>&nbsp;&nbsp;注文情報\\r\\n            </h3>\\r\\n        </header>\\r\\n        <br />\\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n            <div *ngIf=\\\"customers\\\">\\r\\n\\r\\n                <div class=\\\"row\\\" *ngFor=\\\"let customer of customers;trackBy:trackbyService.customer\\\">\\r\\n                    <h4>{{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}</h4>\\r\\n                    <br />\\r\\n                    <table *ngIf=\\\"customer.orders && customer.orders.length\\\" class=\\\"table table-striped table-hover orders-table\\\">\\r\\n                        <tr *ngFor=\\\"let order of customer.orders;trackBy:trackbyService.order\\\">\\r\\n                            <td>{{order.productName}}</td>\\r\\n                            <td class=\\\"text-right\\\">{{ order.itemCost | currency:'JPY':'symbol' }}</td>    \\r\\n                        </tr>\\r\\n                        <tr class=\\\"summary-border\\\">\\r\\n                            <td>&nbsp;</td>\\r\\n                            <td class=\\\"text-right\\\">{{ customer.orderTotal | currency:'JPY':'symbol' }}\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                    <div *ngIf=\\\"!customer.orders || !customer.orders.length\\\">\\r\\n                        注文情報がありません。\\r\\n                    </div> \\r\\n                </div>\\r\\n\\r\\n                <cm-pagination [hidden]=\\\"!customers\\\"\\r\\n                    [totalItems]=\\\"totalRecords\\\" \\r\\n                    [pageSize]=\\\"pageSize\\\" \\r\\n                    (pageChanged)=\\\"pageChanged($event)\\\"></cm-pagination>\\r\\n\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!customers\\\">\\r\\n                顧客情報がありません。\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { OrdersComponent } from './orders.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: OrdersComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class OrdersRoutingModule {\r\n  static components = [ OrdersComponent ];\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../core/services/data.service';\r\nimport { ICustomer, IPagedResults } from '../shared/interfaces';\r\nimport { TrackByService } from '../core/services/trackby.service';\r\n\r\n@Component({\r\n    selector: 'cm-customers-orders',\r\n    templateUrl: './orders.component.html'\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n    customers: ICustomer[];\r\n    totalRecords = 0;\r\n    pageSize = 5;\r\n\r\n    constructor(private dataService: DataService, private trackbyService: TrackByService) { }\r\n\r\n    ngOnInit() {\r\n        this.getCustomersPage(1);\r\n    }\r\n\r\n    pageChanged(page: number) {\r\n        this.getCustomersPage(page);\r\n    }\r\n\r\n    getCustomersPage(page: number) {\r\n        this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\r\n            .subscribe((response: IPagedResults<ICustomer[]>) => {\r\n                this.totalRecords = response.totalRecords;\r\n                this.customers = response.results;\r\n            });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, OrdersRoutingModule],\r\n  declarations: [OrdersRoutingModule.components]\r\n})\r\nexport class OrdersModule { }\r\n"],"sourceRoot":""}